[tool.poetry]
name = "torch_uncertainty"
version = "0.1.0"
description = "A PyTorch Library for benchmarking and leveraging efficient predictive uncertainty quantification techniques."
authors = [
    "ENSTA U2IS <olivier.laurent@ensta-paris.fr>",
    "Adrien Lafage <adrienlafage@outlook.com>",
    "Olivier Laurent <olivier.ar.laurent@gmail.com>",
]
license = "Apache-2.0"
keywords = ["deep-learning", "pytorch", "uncertainty-quantification"]
readme = "README.md"
packages = [{include = "torch_uncertainty"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
pytorch-lightning = "^1.9.0"
tensorboard = "^2.11.2"
einops = "^0.6.0"
torchinfo = "^1.7.1"
torchvision = "^0.14.1"
timm = "^0.6.12"
scipy = "^1.10.0"


[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^23.1.0"
flake8 = "^6.0.0"
mypy = "^0.991"
pytest-cov = "^4.0.0"
pre-commit = "^3.0.4"

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinx-rtd-theme = "^1.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80
target_version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    __pycache__
  | \.git
  | \.mypy_cache
  | \.ipynb_checkpoints
  | build
  | dist
)/
'''

[tool.isort]
line_length = 80
profile = "black"
known_first_party = ["numpy"]

[tool.mypy]
python_version = 3.8
platform = "posix"

color_output = true
pretty = true
show_column_numbers = true
strict = true

# probably redundant, but useful when switching strict to false
check_untyped_defs = true
ignore_missing_imports = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
